ALTER TABLE MANITOU_TEST.APEX$_WS_WEBPG_SECTIONS
 DROP PRIMARY KEY CASCADE;

DROP TABLE MANITOU_TEST.APEX$_WS_WEBPG_SECTIONS CASCADE CONSTRAINTS;

CREATE TABLE MANITOU_TEST.APEX$_WS_WEBPG_SECTIONS
(
  ID                    NUMBER                  NOT NULL,
  WS_APP_ID             NUMBER                  NOT NULL,
  WEBPAGE_ID            NUMBER,
  DISPLAY_SEQUENCE      NUMBER,
  SECTION_TYPE          VARCHAR2(30 BYTE)       NOT NULL,
  TITLE                 VARCHAR2(4000 BYTE),
  CONTENT               CLOB,
  CONTENT_UPPER         CLOB,
  NAV_START_WEBPAGE_ID  NUMBER,
  NAV_MAX_LEVEL         NUMBER,
  NAV_INCLUDE_LINK      VARCHAR2(1 BYTE),
  DATA_GRID_ID          NUMBER,
  REPORT_ID             NUMBER,
  DATA_SECTION_STYLE    NUMBER,
  CHART_TYPE            VARCHAR2(255 BYTE),
  CHART_3D              VARCHAR2(1 BYTE),
  CHART_LABEL           VARCHAR2(255 BYTE),
  LABEL_AXIS_TITLE      VARCHAR2(255 BYTE),
  CHART_VALUE           VARCHAR2(255 BYTE),
  VALUE_AXIS_TITLE      VARCHAR2(255 BYTE),
  CHART_AGGREGATE       VARCHAR2(255 BYTE),
  CHART_SORTING         VARCHAR2(255 BYTE),
  CREATED_ON            DATE                    NOT NULL,
  CREATED_BY            VARCHAR2(255 BYTE)      NOT NULL,
  UPDATED_ON            DATE,
  UPDATED_BY            VARCHAR2(255 BYTE)
)
LOB (CONTENT) STORE AS BASICFILE (
  TABLESPACE  USERS
  ENABLE      STORAGE IN ROW
  CHUNK       8192
  RETENTION
  NOCACHE
  LOGGING
      STORAGE    (
                  INITIAL          64K
                  NEXT             1M
                  MINEXTENTS       1
                  MAXEXTENTS       UNLIMITED
                  PCTINCREASE      0
                  BUFFER_POOL      DEFAULT
                 ))
LOB (CONTENT_UPPER) STORE AS BASICFILE (
  TABLESPACE  USERS
  ENABLE      STORAGE IN ROW
  CHUNK       8192
  RETENTION
  NOCACHE
  LOGGING
      STORAGE    (
                  INITIAL          64K
                  NEXT             1M
                  MINEXTENTS       1
                  MAXEXTENTS       UNLIMITED
                  PCTINCREASE      0
                  BUFFER_POOL      DEFAULT
                 ))
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX MANITOU_TEST.APEX$_WS_WEBPG_SECTIONS_PK ON MANITOU_TEST.APEX$_WS_WEBPG_SECTIONS
(ID)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER MANITOU_TEST."APEX$_WS_WEBPG_SECTIONS_T1"
before insert or update on "APEX$_WS_WEBPG_SECTIONS"
for each row
declare
    l_sequence_changed varchar2(1) := 'N';
    l_title_changed varchar2(1) := 'N';
    l_content_changed varchar2(1) := 'N';
    procedure clob_upper( p_content in clob, p_content_upper in out nocopy clob)
    is
    l_buf varchar2(32767);
    l_off number;
    l_amt number;
    begin
    if p_content is not null then
        l_amt := 8000;
        l_off := 1;
         dbms_lob.trim( p_content_upper, 0);
         begin
             loop
                 dbms_lob.read( p_content, l_amt, l_off, l_buf );
                 l_buf := upper( l_buf );
                 dbms_lob.writeappend( p_content_upper, length(l_buf), l_buf);
                 l_off := l_off + l_amt;
                 l_amt := 8000;
             end loop;
         exception
             when no_data_found then null;
         end;
     end if;
end clob_upper;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if :new.section_type = 'NAV_PAGE' then
        if :new.nav_include_link is null then
            :new.nav_include_link := 'Y';
        end if;
    end if;
    if inserting and :new.content is not null then
        dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        clob_upper( :new.content, :new.content_upper );
    elsif updating then
        if :new.content_upper is null then
            dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        end if;
        clob_upper( :new.content, :new.content_upper );
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(:old.display_sequence,-999) != nvl(:new.display_sequence,-999) then
            l_sequence_changed := 'Y';
        end if;
        if nvl(:old.title,'jKKwZk') != nvl(:new.title,'jKKwZk') then
            l_title_changed := 'Y';
        end if;
        if dbms_lob.compare(:new.content,:old.content) != 0 or nvl(length(:new.content),0) != nvl(length(:old.content),0) then
            l_content_changed := 'Y';
        end if;
        if l_sequence_changed = 'Y' or l_title_changed = 'Y' or l_content_changed = 'Y' then
            insert into apex$_ws_webpg_section_history (section_id, ws_app_id, webpage_id, old_display_sequence, new_display_sequence,
            old_title, new_title, old_content, new_content, change_date, application_user_id)
            values (:new.id, :new.ws_app_id, :new.webpage_id,
                    decode(l_sequence_changed,'Y',:old.display_sequence,null), decode(l_sequence_changed,'Y',:new.display_sequence,null),
                    decode(l_title_changed,'Y',:old.title,null), decode(l_title_changed,'Y',:new.title,null),
                    decode(l_content_changed,'Y',:old.content,null), decode(l_content_changed,'Y',:new.content,null), sysdate, v('APP_USER'));
        end if;
    end if;
end;
/


ALTER TABLE MANITOU_TEST.APEX$_WS_WEBPG_SECTIONS ADD (
  CONSTRAINT APEX$_WS_WEBPG_SECTION_3D_CK
  CHECK (chart_3d in ('Y','N'))
  ENABLE VALIDATE,
  CONSTRAINT APEX$_WS_WEBPG_SECTION_LINK_CK
  CHECK (nav_include_link in ('Y','N'))
  ENABLE VALIDATE,
  CONSTRAINT APEX$_WS_WEBPG_SECTION_TYPE_CK
  CHECK (section_type in ('TEXT','DATA','CHART','NAV_PAGE','NAV_SECTION'))
  ENABLE VALIDATE,
  CONSTRAINT APEX$_WS_WEBPG_SECTIONS_PK
  PRIMARY KEY
  (ID)
  USING INDEX MANITOU_TEST.APEX$_WS_WEBPG_SECTIONS_PK
  ENABLE VALIDATE);
